<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">


<!-- servlet과 servlet mapping구조와 비슷하다. -->
<filter>
	<filter-name>encodingFilter</filter-name>
	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	<init-param>
		<param-name>encoding</param-name>	<!-- setEncoding메서드 호출하면서 -->
		<param-value>UTF-8</param-value>	<!-- 셋팅 -->
	</init-param>
</filter>

<filter-mapping>
	<filter-name>encodingFilter</filter-name>
	<url-pattern>/*</url-pattern>	<!-- 모든 처리 필터를 적용 -->
</filter-mapping>


	<!-- 톰캣에게 알려주는 정보를 여기에 작업함 -->
	
	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>	<!--  -->
		<!-- setContextConfigLocation 작동. -->
		<param-name>contextConfigLocation</param-name>	
		<!-- 비지니스 로직을 처리·관리할 파일, 일반 xml파일이 여기에서 구동되게 해줌. -->
		<param-value>/WEB-INF/spring/root-context.xml</param-value>	
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->	
	<!-- 컨테이너를 작동시키게 하는 엘리먼트가 Listener이고 ContextLoaderListener가 작동된다. 비지니스 로직이 활성화되어진다. -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests (요청)-->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		
		<!-- 모든 요청을 클래스로 만들어져있는 DispatcherServlet에게 서버에게 처리해달라고 넘겨주는 것 -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>	<!-- new DispatcherServlet() 생성 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>	<!-- 파라미터를 초기화해주는 이름 -->
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>	<!-- servlet-context.xml 파일을 읽어가라 명령함. -->
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>*.do</url-pattern>	<!-- '/'표시는 모든 요청이다. tomcat이 아니라 Spring이 직접 처리하겠다는 선언 -->
	</servlet-mapping>

</web-app>
