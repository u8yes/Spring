<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Delivery">

	<insert id="insertDelivery" parameterType="delivery">
	<![CDATA[
		insert into delivery(d_dno, d_cpname, d_odno, d_rpnname, d_tel, d_addr, d_register, d_price) 
		values((select nvl(max(d_dno),0)+1 from delivery), #{d_cpname}, #{d_odno}, #{d_rpnname}, #{d_tel}, #{d_addr}, #{d_register}, #{d_price}) 
	]]>
	</insert>
	
	
	<!-- Mybatis가 제공하는 동적(Dynamic) SQL 쿼리문을 추가적으로 제공해줌. Spring(X) -->
	  <!-- resultType="Delivery" 반환받는 타입을 명시하고 있어야 한다. 짧게 별명alias로 Delivery로 -->
	  <select id="getDeliveryList" resultType="delivery">	
		select * 
	  	from delivery 
	  	where 1 = 1
	  	<if test="searchCondition == 'D_DNO'">
	  		and d_dno like '%'||#{searchKeyword}||'%' 
	  	</if>
	  	<if test="searchCondition == 'D_CPNAME'">
	  		and d_cpname like '%'||#{searchKeyword}||'%' 
	  	</if>
	  	order by d_dno desc
	  </select>
	
	
	 <select id="getDelivery" resultType="delivery">
	<![CDATA[
		select * from delivery where d_dno = #{d_dno}
	]]>
	</select> 
	
	
	  <update id="updateDelivery">
	<![CDATA[
		update delivery set d_dno = #{d_dno}, d_cpname = #{d_cpname}, d_odno = #{d_odno}, d_rpnname = #{d_rpnname}, 
		d_tel = #{d_tel}, d_addr = #{d_addr}, d_register = #{d_register}, d_price = #{d_price} where d_dno = #{d_dno}
	]]>
	</update>  


	<delete id="deleteDelivery">
	<![CDATA[
		delete from delivery where d_dno = #{d_dno}
	]]>
	</delete> 
	
</mapper>

