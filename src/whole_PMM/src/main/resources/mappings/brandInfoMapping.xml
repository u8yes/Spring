<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">	
  <!-- 쿼리가 담기는 설정 파일이다 -->
  
  <mapper namespace="BrandInfo">
	  <insert id="insertBrandInfo" parameterType="brandInfo"> <!-- DAO에서 BrandVO vo(파라미터)에 담아져있기에 parameterType="Brand"생략가능함 -->
	  <![CDATA[
	  		insert into brandInfo(bm_no, bi_no, bi_biznum, bi_compname, bi_comptel, bi_repr, bi_compurnum, bi_addr, bi_desc, bi_bizlic, bi_shop, bi_snsinsta, bi_snsaso, bi_fax, bi_img) 
	  		values ((select nvl(max(bm_no),0)+1 from brand), #{bi_no}, #{bi_biznum}, #{bi_compname}, #{bi_comptel}, #{bi_repr}, #{bi_compurnum}, #{bi_addr}, #{bi_desc}, #{bi_bizlic}, #{bi_shop}, #{bi_snsinsta}, #{bi_snsaso}, #{bi_fax}, #{bi_img})
	  ]]>
	  </insert>	
	  <!-- '<', '>'는 비교 연산자로 인식하지 않고 여기에서는 꺽쇠로 본다. 설정을 <![CDATA[]]>로 --> <!-- // SQL문 - nvl: Null값이면 0으로 실행해라 -->
	  <!-- ${}는 변수를 바로 가져온다. #{}은 실행되어지는 시점에 변수를 가져온다. 둘이 같다고 생각해도 상관없다. -->
  	  
	  <!-- <select id="getBrandList_T" resultType="Brand">	resultType="Brand" 반환받는 타입을 명시하고 있어야 한다. 짧게 별명alias로 Brand로
	  <![CDATA[
	  	select * from Brand where title like '%'||#{searchKeyword}||'%' order by seq desc
	  ]]>
	  </select>
	  
	   
	  <select id="getBrandList_C" resultType="Brand">
	  <![CDATA[
	  	select * from Brand where content like '%'||#{searchKeyword}||'%' order by seq desc
	  ]]>
	  </select> -->
	  
	  <!-- Mybatis가 제공하는 동적(Dynamic) SQL 쿼리문을 추가적으로 제공해줌. Spring(X) -->
	  <!-- resultType="Brand" 반환받는 타입을 명시하고 있어야 한다. 짧게 별명alias로 Brand로 -->
	  <select id="getBrandList" resultType="brand">	
		select * 
	  	from brand 
	  	where 1 = 1
	  	<if test="searchCondition == 'B_CORP'">
	  		and b_corp like '%'||#{searchKeyword}||'%' 
	  	</if>
	  	<if test="searchCondition == 'B_DESC'">
	  		and b_desc like '%'||#{searchKeyword}||'%' 
	  	</if>
	  	order by b_no desc
	  </select>
	  
	  
	  <!-- List 보여주기 -->
	  <select id="getBrand" resultType="brand">
	  <![CDATA[
	  	select * from brand where b_no = #{b_no}
	  ]]>
	  </select>
	  
	  
	  <update id="updateBrand">
	  <![CDATA[
	  	update brand set b_image = #{b_image}, b_corp = #{b_corp}, b_desc = #{b_desc}, b_corp_addr = #{b_corp_addr} where b_no = #{b_no}
	  ]]>
	  </update>
	  
	  
	  <delete id="deleteBrand">
	  <![CDATA[
	  	delete from brand where b_no = #{b_no}
	  ]]>
	  </delete>
	  
  </mapper>
	  
    	
			
	